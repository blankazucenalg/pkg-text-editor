/**
 * text-render directive
 * Render html formatted text using format generated by text-editor directive
 * @author Blanca LÃ³pez<blanca.lopez@data4.mx>
 * @since Dec 15, 2017
 */
(function() {
  'use strict';

  angular 
    .module('pkg-text-editor')
    .directive('textRender', textRender);

  /** @ngInject */
  function textRender($sce) {
    return {
      restrict: 'E',
      template: '<div ng-bind-html="htmlToRender"></div>',
      link: linkFunction,
      require: '?ngModel',
      scope: {
        ngModel: '='
      }
    };

    function linkFunction(scope, element, attrs, ngModel) {
      if (!ngModel) {
        console.log('No ngModel');
        return;
      }

      ngModel.$formatters.push(function (modelValue) {
        return modelValue;
      });

      ngModel.$parsers.push(function (viewValue) {
        var trusted = $sce.getTrustedHtml(viewValue);
        return trusted.split('[').join('&#91;').split(']').join('&#93;').split('<').join('[').split('>').join(']');
      });

      scope.$watch('htmlToRender', function () {
        ngModel.$setViewValue(scope.htmlToRender);
      });

      ngModel.$render = function () {
        scope.htmlToRender = scope.unparseModel(ngModel.$viewValue);
      };

      scope.unparseModel = function (modelValue) {
        var res = modelValue;
        if (modelValue && modelValue.length > 1) {
          res = modelValue.split('[').join('<').split(']').join('>');
        }
        return $sce.getTrustedHtml(res);
      }
    }
  }
})(); 